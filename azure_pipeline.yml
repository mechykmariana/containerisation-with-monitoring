trigger:
  branches:
    include:
      - main  # Trigger the pipeline when changes are made to main 

pool:
  vmImage: 'ubuntu-latest' # lates ubuntu image to run the pipeline

variables:
# Variables are defined in the Azure DevOps
  DOCKER_USERNAME: $(dockerUsername)
  DOCKER_PASSWORD: $(dockerPassword)
  BACKEND_IMAGE_NAME: 'django-backend'
  FRONTEND_IMAGE_NAME: 'react-frontend'
  TAG: 'latest'

stages:
  - stage: Build_and_Push
    displayName: 'Build and Push Docker Images'
    jobs:
      - job: BuildPushImages
        displayName: 'Build and Push Backend/Frontend Images'
        steps:
          # Docker Hub login
          - task: Docker@2
            displayName: 'Docker Hub Login'
            inputs:
              command: login
              containerRegistry: 'docker-service-connection'   # Service connection in Azure for Docker Hub

          # Build & Push Backend
          - task: Docker@2
            displayName: 'Build and Push Backend'
            inputs:
              command: buildAndPush
              repository: '$(DOCKER_USERNAME)/$(BACKEND_IMAGE_NAME)'
              dockerfile: 'Computex/Dockerfile'
              tags: '$(TAG)'
              containerRegistry: 'docker-service-connection'

           # Build & Push Frontend
          - task: Docker@2
            displayName: 'Build and Push Frontend'
            inputs:
              command: buildAndPush
              repository: '$(DOCKER_USERNAME)/$(FRONTEND_IMAGE_NAME)'
              dockerfile: 'ComputexFrontend/Dockerfile'
              tags: '$(TAG)'
              containerRegistry: 'docker-service-connection'

  - stage: Terraform_Deploy
    displayName: 'Terraform Deploy'
    dependsOn: Build_and_Push
    jobs:
      - job: Terraform
        displayName: 'Terraform Init & Apply'
        steps:
          # Install Terraform (Azure-provided task)
          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: '1.6.x'
          # Terraform Init & Apply
          - script: |
              cd terraform/azure
              terraform init
              terraform apply -auto-approve
            displayName: 'Terraform Init & Apply'

