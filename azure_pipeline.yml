trigger:
  branches:
    include:
      - main  # Trigger the pipeline when changes are made to main 

pool:
  vmImage: 'ubuntu-latest'

variables:
  DOCKER_USERNAME: $(dockerUsername)
  DOCKER_PASSWORD: $(dockerPassword)
  BACKEND_IMAGE_NAME: 'django-backend'
  FRONTEND_IMAGE_NAME: 'react-frontend'
  TAG: 'latest'

jobs:
  - job: BuildAndPush
    displayName: 'Build and push docker images'
    steps:
      # Login to Docker Hub
      - task: Docker@2
        displayName: 'Login to docker hub'
        inputs:
          command: 'login'
          containerRegistry: 'docker-service-connection'
          username: '$(DOCKER_USERNAME)'
          password: '$(DOCKER_PASSWORD)'

      # Build and push the backend image
      - task: Docker@2
        displayName: 'Build and push the backend image'
        inputs:
          containerRegistry: 'docker-service-connection'
          repository: '$(DOCKER_USERNAME)/$(BACKEND_IMAGE_NAME)'
          command: 'buildAndPush'
          Dockerfile: '$(Build.SourcesDirectory)/Computex/Dockerfile' 
          tags: '$(TAG)'

      # Build and push the frontend image
      - task: Docker@2
        displayName: 'Build and push the frontend image'
        inputs:
          containerRegistry: 'docker-service-connection'
          repository: '$(DOCKER_USERNAME)/$(FRONTEND_IMAGE_NAME)'
          command: 'buildAndPush'
          Dockerfile: '$(Build.SourcesDirectory)/ComputexFrontend/Dockerfile' 
          tags: '$(TAG)'

  - job: DeployBackend
    displayName: 'Deploy backend image to Azure Web App'
    dependsOn: BuildAndPush
    steps:
      # Deploy the backend to Azure Web App for Containers
      - task: AzureWebAppContainer@2
        displayName: 'Deploy to Azure Web App for Containers'
        inputs:
          azureSubscription: 'pure-azure-service-connection'
          appName: 'backend-web-app'
          imageName: '$(DOCKER_USERNAME)/$(BACKEND_IMAGE_NAME):$(TAG)'

  - job: DeployFrontend
    displayName: 'Deploy frontend image to Azure Web App'
    dependsOn: BuildAndPush
    steps:
      # Deploy the frontend to Azure Web App for Containers
      - task: AzureWebAppContainer@2
        displayName: 'Deploy to Azure Web App for Containers'
        inputs:
          azureSubscription: 'pure-azure-service-connection'
          appName: 'frontend-web-app'
          imageName: '$(DOCKER_USERNAME)/$(FRONTEND_IMAGE_NAME):$(TAG)'

  - job: Terraform
    displayName: 'Run Terraform configurations'
    dependsOn: BuildAndPush
    steps:
      # Install Terraform
      - task: TerraformInstaller@1
        inputs:
          terraformVersion: '1.x'
        
      # Run Terraform configurations
      - script: |
          cd $(Build.SourcesDirectory)/terraform/azure
          terraform init
          terraform plan
          terraform apply -auto-approve
        displayName: 'Run Terraform'
